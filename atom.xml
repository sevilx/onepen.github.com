<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ben哥&#39;s Blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-01-02T07:26:00.884Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Ben哥</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World!</title>
    <link href="http://yoursite.com/2017/12/31/hello-world/"/>
    <id>http://yoursite.com/2017/12/31/hello-world/</id>
    <published>2017-12-31T15:19:46.000Z</published>
    <updated>2017-01-02T07:26:00.884Z</updated>
    
    <content type="html"><![CDATA[<h2 id="终于建好了自己的博客，颇有感触，也欢迎各位朋友围观！"><a href="#终于建好了自己的博客，颇有感触，也欢迎各位朋友围观！" class="headerlink" title="终于建好了自己的博客，颇有感触，也欢迎各位朋友围观！"></a>终于建好了自己的博客，颇有感触，也欢迎各位朋友围观！</h2><p><img src="http://oj28i85cd.bkt.clouddn.com/image/life/beautiful20170102.jpg" alt="beautiful"></p>
<h3 id="十岁不愁、二十不悔、”三十而立、四十不惑、五十知天命、六十耳顺、七十古稀、八十耄耋（mao-die）"><a href="#十岁不愁、二十不悔、”三十而立、四十不惑、五十知天命、六十耳顺、七十古稀、八十耄耋（mao-die）" class="headerlink" title="十岁不愁、二十不悔、”三十而立、四十不惑、五十知天命、六十耳顺、七十古稀、八十耄耋（mào dié）"></a>十岁不愁、二十不悔、”三十而立、四十不惑、五十知天命、六十耳顺、七十古稀、八十耄耋（mào dié）</h3><p>–而我已是到了而立之年。以前总是着迷各种网络新鲜事物，喜欢折腾各种电子玩物，从其他玩家那里学习各种知识，慢慢走出脱离小白之路。而今感觉需要将自己所学分享出来了，而这也是我主要建立这博客的主要原因。</p>
<a id="more"></a>
<p>首先，我很庆幸自己是一名中国人，出生在中国，因为中文文化太迷人了，比如小说。<br>以下引自知乎网友卢诗翰：</p>
<blockquote>
<p>我来告诉你一个事实<br>国外的小说，全部，所有，没有一部拥有中文小说这样庞大的世界观<br>之前和国外朋友聊起，我说我们的孙悟空，这个形象源于1500年前唐朝的真实故事<br>在1000年前南宋时期就在普罗大众中口口相传，代表了反抗无上权威的抗争者<br>恩，里面出现的那个哪吒三太子，故事根要追溯到3000年前的周朝伐商之战，恩，也是历史书上真实的故事<br>冰与火和魔戒，世界观较大，描述也非常细致，但有一个致命的弱点，二者均是自创世界观<br>最多基于欧洲古典文化中的一些故事和古典骑士小说<br>而中文网文，尤其仙侠类，得天独厚，拥有追溯上古的历史<br>而且重点是有一代一代的中文作者不断加持<br>这使得中文网文在装逼界简直堪称恐怖如斯<br>恩，今天我们主角要去的全真派，源自800年前的真实故事<br>全真掌门，曾经给蒙古大汗上过课，恩，就是后来打到你们多瑙河的那个成吉思汗<br>对方表示好好好，逼全让你们装完了<br>神话故事和历史无缝结合，不但大大加强了小说的代入感，还使得中文作者在世界观架构上吊打国外作者。<br>魔戒和地下城系统，其实你自己去翻世界观最初架构，基本都是语焉不详，估计托老也没有想好怎么编<br>中文这边，西游记搜神记山海经封神演义多套架构随你选择，其架构完整性经过千百年来无数作者的补充，非常完善。<br>就一个简单的，世界诞生为何，人死后灵魂去哪<br>国内有好多种说法，但是随便哪套拿出来，整体的逻辑自洽度是非常高的：<br>牛头马面功能，奈何桥系统，孟婆汤补丁，六道轮回算法机制，功德投胎排名机制，应对BUG的谛听系统，热备用的地藏王系统<br>这些你习以为常的东西在国外都是没有的，托老这样的集大成者也只能一笔带过<br>而且，最恐怖的是拥有逻辑自洽能力<br>苍天已死，黄天当立——当年张角就是靠着这个掀翻了400年的大汉朝，才有后面三国鼎立的局面<br>你说这个太平广记是不是真货！<br>好好说话，你先把历史书放下<br>世界观方面，中文作者天生有一点优势<br>此外，中文小说，似乎确实在世界观上面比国外的要奔放一些<br>之前回答过一个问题<br>在看一些日本动漫时总有种「格局很小，只有一小撮人斗智斗勇」的感觉，是否跟作者或日本的某些文化有关？ - 卢诗翰的回答 - 知乎<br>日本的小说，轻小说有一个很典型的特点就是 — — 一骑讨<br>打到最后决战你发现是两方王者在对打，要命的是这两个人居然还是一个学校的同班同学<br>格局大致也是 保卫这个城市，守护那个地区<br>西方小说有一个类似的问题，在哈利波特里面非常突出<br>— — 我需要这个老魔杖，得到他的人能无敌天下<br>换成中文作者不但要得到它，肯定还要自己造出更厉害的东西，命名成什么龙之魔杖什么的<br>而且中文作者的视角往往是：<br>一个魔杖顶蛋用，再厉害的武器也没用<br>真正有用的是千军万马，魔杖所指之处，法师团们蜂拥而上之处<br>阶级斗争理论，中文作者领先国外作者一个光年<br>此外中文的爽文打到后面，文艺一点的就是<br>我要那天，再难遮我眼<br>我要那地，再难埋我心<br>粗放一点，那就是横扫一切牛鬼蛇神<br>无需守护传说，我将超越传说<br>这种非常积极超越前人，尤其是无视权威，打倒一切诸神的能动性，是中文网文独有的</p>
</blockquote>
<p>如此丰富的中文文化，想必传播出去肯定把歪果仁迷得神魂颠倒，果然<a href="http://mt.sohu.com/20161206/n475096733.shtml" target="_blank" rel="external">新闻</a>就出来。</p>
<p>而我觉得之所以能这么火，一个原因在于中国文化，上文已提及；另外一个原因是由于大众的分享。<br>互联网的出现使新闻资讯、媒体、商品、知识等一切信息能迅速传播，而我也希望从我自己获取的信息中提炼精华，分享给他人，让他人少走弯路，使生活更美好！</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;终于建好了自己的博客，颇有感触，也欢迎各位朋友围观！&quot;&gt;&lt;a href=&quot;#终于建好了自己的博客，颇有感触，也欢迎各位朋友围观！&quot; class=&quot;headerlink&quot; title=&quot;终于建好了自己的博客，颇有感触，也欢迎各位朋友围观！&quot;&gt;&lt;/a&gt;终于建好了自己的博客，颇有感触，也欢迎各位朋友围观！&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://oj28i85cd.bkt.clouddn.com/image/life/beautiful20170102.jpg&quot; alt=&quot;beautiful&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;十岁不愁、二十不悔、”三十而立、四十不惑、五十知天命、六十耳顺、七十古稀、八十耄耋（mao-die）&quot;&gt;&lt;a href=&quot;#十岁不愁、二十不悔、”三十而立、四十不惑、五十知天命、六十耳顺、七十古稀、八十耄耋（mao-die）&quot; class=&quot;headerlink&quot; title=&quot;十岁不愁、二十不悔、”三十而立、四十不惑、五十知天命、六十耳顺、七十古稀、八十耄耋（mào dié）&quot;&gt;&lt;/a&gt;十岁不愁、二十不悔、”三十而立、四十不惑、五十知天命、六十耳顺、七十古稀、八十耄耋（mào dié）&lt;/h3&gt;&lt;p&gt;–而我已是到了而立之年。以前总是着迷各种网络新鲜事物，喜欢折腾各种电子玩物，从其他玩家那里学习各种知识，慢慢走出脱离小白之路。而今感觉需要将自己所学分享出来了，而这也是我主要建立这博客的主要原因。&lt;/p&gt;
    
    </summary>
    
      <category term="生活" scheme="http://yoursite.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>性价比最高的还是x86软路由（N3160&amp;N3700）</title>
    <link href="http://yoursite.com/2017/01/05/Recommend-cost-effective-routers/"/>
    <id>http://yoursite.com/2017/01/05/Recommend-cost-effective-routers/</id>
    <published>2017-01-05T15:32:06.000Z</published>
    <updated>2017-01-08T08:33:36.854Z</updated>
    
    <content type="html"><![CDATA[<h2 id="随着国家在推动宽带家庭提速，以及目前路由器品牌繁多、功能越来越多丰富，很多用户都面临着不知道如何选择了。-对于只要求能上网的用户来说，TPlink的随便挑，对于一点都不想动手的高端用户，Asus、Netgear买最贵的就行了。我下面要介绍的还是针对愿意追求性价比的玩家用户。"><a href="#随着国家在推动宽带家庭提速，以及目前路由器品牌繁多、功能越来越多丰富，很多用户都面临着不知道如何选择了。-对于只要求能上网的用户来说，TPlink的随便挑，对于一点都不想动手的高端用户，Asus、Netgear买最贵的就行了。我下面要介绍的还是针对愿意追求性价比的玩家用户。" class="headerlink" title="随着国家在推动宽带家庭提速，以及目前路由器品牌繁多、功能越来越多丰富，很多用户都面临着不知道如何选择了。 对于只要求能上网的用户来说，TPlink的随便挑，对于一点都不想动手的高端用户，Asus、Netgear买最贵的就行了。我下面要介绍的还是针对愿意追求性价比的玩家用户。"></a>随着国家在推动宽带家庭提速，以及目前路由器品牌繁多、功能越来越多丰富，很多用户都面临着不知道如何选择了。 对于只要求能上网的用户来说，TPlink的随便挑，对于一点都不想动手的高端用户，Asus、Netgear买最贵的就行了。我下面要介绍的还是针对愿意追求性价比的玩家用户。</h2><h2 id="进入正题。目前市面上卖得比较火的路由有网件的6300、华硕的66u、68u甚至更高端路由器。主要是由于这类路由器提供最基本的稳定上网功能外，还有koolshare等一些团队开功能更丰富的插件让路由器变得更好用更强大，当然TP流刷openwrt也能实现很多功能，但是硬件的性能就差远，但是在消耗性能的同时，路由器的稳定性就不足。"><a href="#进入正题。目前市面上卖得比较火的路由有网件的6300、华硕的66u、68u甚至更高端路由器。主要是由于这类路由器提供最基本的稳定上网功能外，还有koolshare等一些团队开功能更丰富的插件让路由器变得更好用更强大，当然TP流刷openwrt也能实现很多功能，但是硬件的性能就差远，但是在消耗性能的同时，路由器的稳定性就不足。" class="headerlink" title="进入正题。目前市面上卖得比较火的路由有网件的6300、华硕的66u、68u甚至更高端路由器。主要是由于这类路由器提供最基本的稳定上网功能外，还有koolshare等一些团队开功能更丰富的插件让路由器变得更好用更强大，当然TP流刷openwrt也能实现很多功能，但是硬件的性能就差远，但是在消耗性能的同时，路由器的稳定性就不足。"></a>进入正题。目前市面上卖得比较火的路由有网件的6300、华硕的66u、68u甚至更高端路由器。主要是由于这类路由器提供最基本的稳定上网功能外，还有koolshare等一些团队开功能更丰富的插件让路由器变得更好用更强大，当然TP流刷openwrt也能实现很多功能，但是硬件的性能就差远，但是在消耗性能的同时，路由器的稳定性就不足。</h2><h2 id="而且这些路由器的价格从6XX到高端的2XXX元，价格也不便宜，但是开发者开发出这么丰富的功能使得这些路由器才变得这么有价值。突然的一天我在恩山逛的时候发现一款x86软路由，功耗10W不到，性能秒杀ac5300几条街了，如果加上无限网卡或者AP，性价比比这些无线路由器不知道高多少了。而且很多企业、网吧用得也都是是软路由，这也说明软路由已经很稳定以及性能优秀。"><a href="#而且这些路由器的价格从6XX到高端的2XXX元，价格也不便宜，但是开发者开发出这么丰富的功能使得这些路由器才变得这么有价值。突然的一天我在恩山逛的时候发现一款x86软路由，功耗10W不到，性能秒杀ac5300几条街了，如果加上无限网卡或者AP，性价比比这些无线路由器不知道高多少了。而且很多企业、网吧用得也都是是软路由，这也说明软路由已经很稳定以及性能优秀。" class="headerlink" title="而且这些路由器的价格从6XX到高端的2XXX元，价格也不便宜，但是开发者开发出这么丰富的功能使得这些路由器才变得这么有价值。突然的一天我在恩山逛的时候发现一款x86软路由，功耗10W不到，性能秒杀ac5300几条街了，如果加上无限网卡或者AP，性价比比这些无线路由器不知道高多少了。而且很多企业、网吧用得也都是是软路由，这也说明软路由已经很稳定以及性能优秀。"></a>而且这些路由器的价格从6XX到高端的2XXX元，价格也不便宜，但是开发者开发出这么丰富的功能使得这些路由器才变得这么有价值。突然的一天我在恩山逛的时候发现一款x86软路由，功耗10W不到，性能秒杀ac5300几条街了，如果加上无限网卡或者AP，性价比比这些无线路由器不知道高多少了。而且很多企业、网吧用得也都是是软路由，这也说明软路由已经很稳定以及性能优秀。</h2><h2 id="软路由的性能主要由CPU决定，但是x86的软路由的发热以及功耗都不小，对比ASUS的AC68U的正常工作功耗在10W左右，网速满速时功耗在15W左右，当然待机时就更低了。而淘宝上卖得多的软路由有D525、1037U等，他们的CPU的TDP功耗在13-15w，再加上风扇硬盘后，功耗就更好了。"><a href="#软路由的性能主要由CPU决定，但是x86的软路由的发热以及功耗都不小，对比ASUS的AC68U的正常工作功耗在10W左右，网速满速时功耗在15W左右，当然待机时就更低了。而淘宝上卖得多的软路由有D525、1037U等，他们的CPU的TDP功耗在13-15w，再加上风扇硬盘后，功耗就更好了。" class="headerlink" title="软路由的性能主要由CPU决定，但是x86的软路由的发热以及功耗都不小，对比ASUS的AC68U的正常工作功耗在10W左右，网速满速时功耗在15W左右，当然待机时就更低了。而淘宝上卖得多的软路由有D525、1037U等，他们的CPU的TDP功耗在13~15w，再加上风扇硬盘后，功耗就更好了。"></a>软路由的性能主要由CPU决定，但是x86的软路由的发热以及功耗都不小，对比ASUS的AC68U的正常工作功耗在10W左右，网速满速时功耗在15W左右，当然待机时就更低了。而淘宝上卖得多的软路由有D525、1037U等，他们的CPU的TDP功耗在13~15w，再加上风扇硬盘后，功耗就更好了。</h2><h2 id="当然有朋友说这点功耗不算什么，按假设电费1元算，10W功耗的路由器24小时不间断工作一年365天算下来，电费是"><a href="#当然有朋友说这点功耗不算什么，按假设电费1元算，10W功耗的路由器24小时不间断工作一年365天算下来，电费是" class="headerlink" title="当然有朋友说这点功耗不算什么，按假设电费1元算，10W功耗的路由器24小时不间断工作一年365天算下来，电费是"></a>当然有朋友说这点功耗不算什么，按假设电费1元算，10W功耗的路由器24小时不间断工作一年365天算下来，电费是</h2><blockquote>
<p>10w/1000<em>24</em>365=87.6 元 </p>
</blockquote>
<h2 id="但是作为追求产品性能以及作为环保人士以及对噪声的严格要求，必须找一款合适的产品，然后发现了几款合适的CPU：-J1900、N3160、N3700。不管从CPU的功耗、性能、甚至产品的尺寸都能很好的满足。尤其是N3160、N3700，cpu的TDP功耗是6w，加上硬盘、无限网卡或者AP，简直跟那些硬路由差不多了。放上几个产品的性能比较，上图"><a href="#但是作为追求产品性能以及作为环保人士以及对噪声的严格要求，必须找一款合适的产品，然后发现了几款合适的CPU：-J1900、N3160、N3700。不管从CPU的功耗、性能、甚至产品的尺寸都能很好的满足。尤其是N3160、N3700，cpu的TDP功耗是6w，加上硬盘、无限网卡或者AP，简直跟那些硬路由差不多了。放上几个产品的性能比较，上图" class="headerlink" title="但是作为追求产品性能以及作为环保人士以及对噪声的严格要求，必须找一款合适的产品，然后发现了几款合适的CPU： J1900、N3160、N3700。不管从CPU的功耗、性能、甚至产品的尺寸都能很好的满足。尤其是N3160、N3700，cpu的TDP功耗是6w，加上硬盘、无限网卡或者AP，简直跟那些硬路由差不多了。放上几个产品的性能比较，上图"></a>但是作为追求产品性能以及作为环保人士以及对噪声的严格要求，必须找一款合适的产品，然后发现了几款合适的CPU： J1900、N3160、N3700。不管从CPU的功耗、性能、甚至产品的尺寸都能很好的满足。尤其是N3160、N3700，cpu的TDP功耗是6w，加上硬盘、无限网卡或者AP，简直跟那些硬路由差不多了。放上几个产品的性能比较，上图<img src="http://oj28i85cd.bkt.clouddn.com/image/xiaoma/campare1V2.png" alt=""></h2><h2 id="淘宝上对比了价格，找了一家价格最高的一家，来自小马的软路由，然后不停的骚扰卖家，详细了解了他们家的产品。做了份对比表格，如下图"><a href="#淘宝上对比了价格，找了一家价格最高的一家，来自小马的软路由，然后不停的骚扰卖家，详细了解了他们家的产品。做了份对比表格，如下图" class="headerlink" title="淘宝上对比了价格，找了一家价格最高的一家，来自小马的软路由，然后不停的骚扰卖家，详细了解了他们家的产品。做了份对比表格，如下图"></a>淘宝上对比了价格，找了一家价格最高的一家，来自小马的软路由，然后不停的骚扰卖家，详细了解了他们家的产品。做了份对比表格，如下图<img src="http://oj28i85cd.bkt.clouddn.com/image/xiaoma/xiaomaproduct1.8.png" alt=""></h2><h2 id="真是好东西啊，马上下单回来测试，同时也查了张大妈家，原来早在大半年前已有人享用了这款产品并做了分享。可惜我买晚了"><a href="#真是好东西啊，马上下单回来测试，同时也查了张大妈家，原来早在大半年前已有人享用了这款产品并做了分享。可惜我买晚了" class="headerlink" title="真是好东西啊，马上下单回来测试，同时也查了张大妈家，原来早在大半年前已有人享用了这款产品并做了分享。可惜我买晚了"></a>真是好东西啊，马上下单回来测试，同时也查了张大妈家，原来早在大半年前已有人享用了这款产品并做了分享。可惜我买晚了<img src="http://oj28i85cd.bkt.clouddn.com/image/xiaoma/smzdmxiaoma.png" alt=""></h2><h2 id="买回的产品做的测试如图："><a href="#买回的产品做的测试如图：" class="headerlink" title="买回的产品做的测试如图："></a>买回的产品做的测试如图：</h2><h2 id="还好卖家也搞了论坛以及Q群，里面有大量的教程方便上手。这样搞下来，还省了一个nas的钱，轻度使用完全没问题。后期的文章再介绍一些玩法吧"><a href="#还好卖家也搞了论坛以及Q群，里面有大量的教程方便上手。这样搞下来，还省了一个nas的钱，轻度使用完全没问题。后期的文章再介绍一些玩法吧" class="headerlink" title="还好卖家也搞了论坛以及Q群，里面有大量的教程方便上手。这样搞下来，还省了一个nas的钱，轻度使用完全没问题。后期的文章再介绍一些玩法吧"></a>还好卖家也搞了论坛以及Q群，里面有大量的教程方便上手。这样搞下来，还省了一个nas的钱，轻度使用完全没问题。后期的文章再介绍一些玩法吧</h2>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;随着国家在推动宽带家庭提速，以及目前路由器品牌繁多、功能越来越多丰富，很多用户都面临着不知道如何选择了。-对于只要求能上网的用户来说，TPlink的随便挑，对于一点都不想动手的高端用户，Asus、Netgear买最贵的就行了。我下面要介绍的还是针对愿意追求性价比的
    
    </summary>
    
    
      <category term="路由器" scheme="http://yoursite.com/tags/%E8%B7%AF%E7%94%B1%E5%99%A8/"/>
    
      <category term="x86 软路由" scheme="http://yoursite.com/tags/x86-%E8%BD%AF%E8%B7%AF%E7%94%B1/"/>
    
  </entry>
  
  <entry>
    <title>个人备注</title>
    <link href="http://yoursite.com/2017/01/02/personal-note/"/>
    <id>http://yoursite.com/2017/01/02/personal-note/</id>
    <published>2017-01-02T00:44:05.000Z</published>
    <updated>2017-01-08T08:20:10.998Z</updated>
    
    <content type="html"><![CDATA[<h1 id="个人标记"><a href="#个人标记" class="headerlink" title="个人标记"></a>个人标记</h1><a id="more"></a>
<h2 id="配置-安装-Hexo-插件"><a href="#配置-安装-Hexo-插件" class="headerlink" title="配置 安装 Hexo 插件"></a>配置 安装 Hexo 插件</h2><pre><code>npm install hexo-generator-index --save
npm install hexo-generator-archive --save  
npm install hexo-generator-category --save
npm install hexo-generator-tag --save
npm install hexo-server --save
npm install hexo-deployer-git --save
npm install hexo-deployer-heroku --save
npm install hexo-deployer-rsync --save
npm install hexo-deployer-openshift --save
npm install hexo-renderer-marked@0.2 --save
npm install hexo-renderer-stylus@0.2 --save
npm install hexo-generator-feed@1 --save
npm install hexo-generator-sitemap@1 --save
npm install hexo-generator-sitemap --save
npm install hexo-generator-baidu-sitemap --save
npm install hexo-generator-searchdb --save
</code></pre><h2 id="Markdown语法"><a href="#Markdown语法" class="headerlink" title="Markdown语法"></a>Markdown语法</h2><p>1、分段： 两个回车</p>
<p>2、换行 两个空格 + 回车</p>
<p>3、标题 # ~ ###### 井号的个数表示几级标题，即Markdown可以表示一级标题到六级标题</p>
<p>4、引用 &gt;</p>
<p>5、列表 * ， + ， - ， 1. ，选其中之一，注意后面有个空格</p>
<p>6、代码区块 四个空格 开头</p>
<p>7、链接 <code>[文字](链接地址)</code></p>
<p>8、图片  <code>![图片说明](图片地址)</code> ，图片地址可以是本地路劲，也可以是网络地址</p>
<p>9、强调 <strong>文字</strong> ， <strong>文字</strong> ， <em>文字</em> ， <em>文字</em></p>
<p>10、代码 <code>`，</code></p>
<p>下面来看看例文，你就马上明白，怎么来使用这些符号来写好一篇自己的博文了。</p>
<p>例文</p>
<p>在线编辑器例文： <a href="https://www.zybuluo.com/mdeditor" target="_blank" rel="external">传送门</a></p>
<p>Windows编辑器： <a href="http://markdownpad.com/download.html" target="_blank" rel="external">MarkdownPad</a></p>
<p>你先试试，用Markdown怎么去些自己的文章，有了例子，还是很容易上手的。  </p>
<h2 id="hexo常用命令"><a href="#hexo常用命令" class="headerlink" title="hexo常用命令"></a>hexo常用命令</h2><p>我们在前面的已经略微的接触了一些hexo的命令，如 &gt; hexo new “my blog” ，&gt; hexo server 等。下面来介绍一下我们经常会用到的hexo命令</p>
<p>1、新建</p>
<pre><code>hexo new &quot;my blog&quot;
</code></pre><p>新建的文件在 hexo/source/_posts/my-blog.md’</p>
<p>2、编译</p>
<pre><code>hexo generate
</code></pre><p>一般部署上去的时候都需要编译一下，编译后，会出现一个 &gt; public 文件夹，将所有的md文件编译成html文件</p>
<p>3、开启本地服务</p>
<pre><code>hexo server
</code></pre><p>这个命令，我之前已经用过了，开启本地hexo服务用的</p>
<p>4、部署</p>
<pre><code>hexo deploy
</code></pre><p>部署到git上的时候，需要用这个命令，下一篇中，我们会使用到这个命令</p>
<p>5、清除 public</p>
<pre><code>hexo clean
</code></pre><p>当 source 文件夹中的部分资源更改过之后，特别是对文件进行了删除或者路径的改变之后，需要执行这个命令，然后重新编译。</p>
<p>6、更新hexo：<br>    <code>npm update -g hexo</code></p>
<p>7、更新主题：  </p>
<pre><code>`cd 到主题文件夹，执行命令：  
git pull`
</code></pre><p>8、更新插件：<br>    <code>npm update</code></p>
<p>9、一键更新发布：<br>    <code>hexo clean &amp;&amp; hexo generate --deploy</code></p>
<p>以上这些都是经常用到的一些hexo命令。</p>
<h2 id="底部logo栏更改"><a href="#底部logo栏更改" class="headerlink" title="底部logo栏更改"></a>底部logo栏更改</h2><p>找到 \themes\next\layout_partials\下面的footer.swig文件，打开，用<code>&lt;!--</code>和<code>--&gt;</code>把其中的<code>powered-by</code>和<code>theme-info</code>这两端注释掉</p>
<h2 id="添加版权"><a href="#添加版权" class="headerlink" title="添加版权"></a>添加版权</h2><p>对于 <code>hexo next</code> 主题而言先找到<code>（\themes\next\layout\post.swig）</code></p>
<p>在区域内添加如下代码：</p>
<pre><code>&lt;div class=&quot;page-footer&quot;&gt;
    {% if not is_index %}
          <div id="eof" class="print-invisible">
     	   <hr class="eof">
    	  </div>
		  <div class="copyright" style="clear:both;">
    	     <p><span>本文标题:</span><a href="{{ url_for(page.path) }}">{{ page.title }}</a></p>
    	     <p><span>文章作者:</span><a href="/" title="访问 {{ theme.author }} 的个人博客">{{ theme.author }}</a></p>
         	<p><span>发布时间:</span>{{ page.date.format("YYYY年M月D日 - HH时MM分") }}</p>
         	<p><span>最后更新:</span>{{ page.updated.format("YYYY年M月D日 - HH时MM分") }}</p>
         	<p><span>本文字数:</span><span class="page-count">本文一共有{{ wordcount(page.content) }}字</span></p>
         	<p><span>原始链接:</span><a href="{{ url_for(page.path) }}" title="{{ page.title }}">{{ page.permalink }}</a></p>
         	<p><span>许可协议:</span><i class="fa fa-creative-commons"></i> <a rel="external" href="http://creativecommons.org/licenses/by-nc/4.0/" title="Attribution-NonCommercial 4.0 International (CC BY-NC 4.0)" target="_blank">Attribution-NonCommercial 4.0</a></p>
         	<p><span>转载请保留以上信息。</span></p>
     	 </div>
    	{% endif %}
    {% if not is_index and (post.prev or post.next) %}
    	  <div class="post-nav">
    	    <div class="post-nav-prev post-nav-item">
    	      {% if post.prev %}
    	        <a href="{{ url_for(post.prev.path) }}">{{post.prev.title}}</a>
    	      {% endif %}
        &lt;/div&gt;

        &lt;div class=&quot;post-nav-next post-nav-item&quot;&gt;
          {% if post.next %}
    	        <a href="{{ url_for(post.next.path) }}">{{post.next.title}}</a>
    	      {% endif %}
        &lt;/div&gt;
      &lt;/div&gt;
    {% endif %}

 &lt;/div&gt;
</div></div></code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;个人标记&quot;&gt;&lt;a href=&quot;#个人标记&quot; class=&quot;headerlink&quot; title=&quot;个人标记&quot;&gt;&lt;/a&gt;个人标记&lt;/h1&gt;
    
    </summary>
    
      <category term="NAS" scheme="http://yoursite.com/categories/NAS/"/>
    
    
      <category term="markedown" scheme="http://yoursite.com/tags/markedown/"/>
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>openmediavault 3 安装 wordpress</title>
    <link href="http://yoursite.com/2016/12/31/omv-install-wordpress/"/>
    <id>http://yoursite.com/2016/12/31/omv-install-wordpress/</id>
    <published>2016-12-31T15:19:46.000Z</published>
    <updated>2017-01-02T02:50:47.424Z</updated>
    
    <content type="html"><![CDATA[<h2 id="本想在omv上装个wordpress玩玩博客，但是网上找的教程都是omv-2-X的教程，而且非常简单，直接安装一个插件就ok了。研究了下，理清楚3-0安装wordpress的思路："><a href="#本想在omv上装个wordpress玩玩博客，但是网上找的教程都是omv-2-X的教程，而且非常简单，直接安装一个插件就ok了。研究了下，理清楚3-0安装wordpress的思路：" class="headerlink" title="本想在omv上装个wordpress玩玩博客，但是网上找的教程都是omv 2.X的教程，而且非常简单，直接安装一个插件就ok了。研究了下，理清楚3.0安装wordpress的思路："></a>本想在omv上装个wordpress玩玩博客，但是网上找的教程都是omv 2.X的教程，而且非常简单，直接安装一个插件就ok了。研究了下，理清楚3.0安装wordpress的思路：</h2><ol>
<li>安装Mysql数据库PHP环境  </li>
<li>安装Nginx Web服务器  </li>
<li>安装wordpress</li>
</ol>
<p>好了，话不多说，上图说明：</p>
<a id="more"></a>
<h3 id="首先新建一个wordpress的共享文件夹"><a href="#首先新建一个wordpress的共享文件夹" class="headerlink" title="首先新建一个wordpress的共享文件夹 "></a>首先新建一个wordpress的共享文件夹 <img src="http://oj28i85cd.bkt.clouddn.com/image/nas/wordpress/wordpressfolder.jpg" alt="newfolder"></h3><h3 id="然后在插件里直接安装-MySQL和Nginx，如下图，由于我已安装，所以按钮部分是灰色的。"><a href="#然后在插件里直接安装-MySQL和Nginx，如下图，由于我已安装，所以按钮部分是灰色的。" class="headerlink" title="然后在插件里直接安装 MySQL和Nginx，如下图，由于我已安装，所以按钮部分是灰色的。"></a>然后在插件里直接安装 MySQL和Nginx，如下图，由于我已安装，所以按钮部分是灰色的。<img src="http://oj28i85cd.bkt.clouddn.com/image/nas/wordpress/install_mysqlnginx.png" alt="install_mysqlnginx"></h3><h3 id="设置Mysql，如下图，设置管理员密码，最好点击apply生效，然后点击"><a href="#设置Mysql，如下图，设置管理员密码，最好点击apply生效，然后点击" class="headerlink" title="设置Mysql，如下图，设置管理员密码，最好点击apply生效，然后点击"></a>设置Mysql，如下图，设置管理员密码，最好点击apply生效，然后点击</h3><blockquote>
<p><strong>show</strong><br><img src="http://oj28i85cd.bkt.clouddn.com/image/nas/wordpress/enablemysql.jpg" alt="enablemysql"></p>
<h3 id="打开页面设置，并用root用户和刚刚设置的管理员密码登陆，然后新建wordpress的数据库，点击确定，Mysql的设置就完成了"><a href="#打开页面设置，并用root用户和刚刚设置的管理员密码登陆，然后新建wordpress的数据库，点击确定，Mysql的设置就完成了" class="headerlink" title="打开页面设置，并用root用户和刚刚设置的管理员密码登陆，然后新建wordpress的数据库，点击确定，Mysql的设置就完成了"></a>打开页面设置，并用root用户和刚刚设置的管理员密码登陆，然后新建wordpress的数据库，点击确定，Mysql的设置就完成了</h3><p><img src="http://oj28i85cd.bkt.clouddn.com/image/nas/wordpress/mysqlset.jpg" alt="mysqlset"></p>
<h3 id="设置Nginx，新建一个pool，如下图设置，其他保持默认即可。"><a href="#设置Nginx，新建一个pool，如下图设置，其他保持默认即可。" class="headerlink" title="设置Nginx，新建一个pool，如下图设置，其他保持默认即可。"></a>设置Nginx，新建一个pool，如下图设置，其他保持默认即可。</h3><p><img src="http://oj28i85cd.bkt.clouddn.com/image/nas/wordpress/nginxsetpool.png" alt="nginxsetpool"></p>
<h3 id="设置Nginx的server，如下图。保存、Apply。"><a href="#设置Nginx的server，如下图。保存、Apply。" class="headerlink" title="设置Nginx的server，如下图。保存、Apply。"></a>设置Nginx的server，如下图。保存、Apply。</h3><p><img src="http://oj28i85cd.bkt.clouddn.com/image/nas/wordpress/nginxservers.png" alt="nginxservers"></p>
<h3 id="最后一步，安装wordpress。-用工具SSH连接OMV，以root用户登陆。切换到最开始建立的wordpress目录用以下命令安装。"><a href="#最后一步，安装wordpress。-用工具SSH连接OMV，以root用户登陆。切换到最开始建立的wordpress目录用以下命令安装。" class="headerlink" title="最后一步，安装wordpress。 用工具SSH连接OMV，以root用户登陆。切换到最开始建立的wordpress目录用以下命令安装。"></a>最后一步，安装wordpress。 用工具SSH连接OMV，以root用户登陆。切换到最开始建立的wordpress目录用以下命令安装。</h3></blockquote>
<p><code>cd /media/你硬盘的uuid/wordpress/
wget https://wordpress.org/latest.tar.gz
tar xvzf latest.tar.gz --strip-components=1
rm latest.tar.gz</code></p>
<h3 id="现在登陆这个网址吧-http-omv的地址-8090"><a href="#现在登陆这个网址吧-http-omv的地址-8090" class="headerlink" title="现在登陆这个网址吧: http://omv的地址:8090/"></a>现在登陆这个网址吧: <a href="http://omv的地址:8090/" target="_blank" rel="external">http://omv的地址:8090/</a></h3><h3 id="大功告成！"><a href="#大功告成！" class="headerlink" title="大功告成！"></a>大功告成！</h3>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;本想在omv上装个wordpress玩玩博客，但是网上找的教程都是omv-2-X的教程，而且非常简单，直接安装一个插件就ok了。研究了下，理清楚3-0安装wordpress的思路：&quot;&gt;&lt;a href=&quot;#本想在omv上装个wordpress玩玩博客，但是网上找的教程都是omv-2-X的教程，而且非常简单，直接安装一个插件就ok了。研究了下，理清楚3-0安装wordpress的思路：&quot; class=&quot;headerlink&quot; title=&quot;本想在omv上装个wordpress玩玩博客，但是网上找的教程都是omv 2.X的教程，而且非常简单，直接安装一个插件就ok了。研究了下，理清楚3.0安装wordpress的思路：&quot;&gt;&lt;/a&gt;本想在omv上装个wordpress玩玩博客，但是网上找的教程都是omv 2.X的教程，而且非常简单，直接安装一个插件就ok了。研究了下，理清楚3.0安装wordpress的思路：&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;安装Mysql数据库PHP环境  &lt;/li&gt;
&lt;li&gt;安装Nginx Web服务器  &lt;/li&gt;
&lt;li&gt;安装wordpress&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;好了，话不多说，上图说明：&lt;/p&gt;
    
    </summary>
    
      <category term="NAS" scheme="http://yoursite.com/categories/NAS/"/>
    
    
      <category term="openmediavault 3" scheme="http://yoursite.com/tags/openmediavault-3/"/>
    
      <category term="wordpress" scheme="http://yoursite.com/tags/wordpress/"/>
    
  </entry>
  
</feed>

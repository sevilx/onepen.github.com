<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ben哥&#39;s Blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-01-02T02:50:22.919Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Ben哥</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>个人备注</title>
    <link href="http://yoursite.com/2017/01/02/personal-note/"/>
    <id>http://yoursite.com/2017/01/02/personal-note/</id>
    <published>2017-01-02T00:44:05.000Z</published>
    <updated>2017-01-02T02:50:22.919Z</updated>
    
    <content type="html"><![CDATA[<h1 id="终于整理好GitHub博客，标记一下！"><a href="#终于整理好GitHub博客，标记一下！" class="headerlink" title="终于整理好GitHub博客，标记一下！"></a>终于整理好GitHub博客，标记一下！</h1><a id="more"></a>
<h2 id="配置-安装-Hexo-插件"><a href="#配置-安装-Hexo-插件" class="headerlink" title="配置 安装 Hexo 插件"></a>配置 安装 Hexo 插件</h2><pre><code>npm install hexo-generator-index --save
npm install hexo-generator-archive --save  
npm install hexo-generator-category --save
npm install hexo-generator-tag --save
npm install hexo-server --save
npm install hexo-deployer-git --save
npm install hexo-deployer-heroku --save
npm install hexo-deployer-rsync --save
npm install hexo-deployer-openshift --save
npm install hexo-renderer-marked@0.2 --save
npm install hexo-renderer-stylus@0.2 --save
npm install hexo-generator-feed@1 --save
npm install hexo-generator-sitemap@1 --save
npm install hexo-generator-sitemap --save
npm install hexo-generator-baidu-sitemap --save
npm install hexo-generator-searchdb --save
</code></pre><h2 id="Markdown语法"><a href="#Markdown语法" class="headerlink" title="Markdown语法"></a>Markdown语法</h2><p>1、分段： 两个回车</p>
<p>2、换行 两个空格 + 回车</p>
<p>3、标题 # ~ ###### 井号的个数表示几级标题，即Markdown可以表示一级标题到六级标题</p>
<p>4、引用 &gt;</p>
<p>5、列表 * ， + ， - ， 1. ，选其中之一，注意后面有个空格</p>
<p>6、代码区块 四个空格 开头</p>
<p>7、链接 <code>[文字](链接地址)</code></p>
<p>8、图片  <code>![图片说明](图片地址)</code> ，图片地址可以是本地路劲，也可以是网络地址</p>
<p>9、强调 <strong>文字</strong> ， <strong>文字</strong> ， <em>文字</em> ， <em>文字</em></p>
<p>10、代码 <code>`，</code></p>
<p>下面来看看例文，你就马上明白，怎么来使用这些符号来写好一篇自己的博文了。</p>
<p>例文</p>
<p>在线编辑器例文： <a href="https://www.zybuluo.com/mdeditor" target="_blank" rel="external">传送门</a></p>
<p>Windows编辑器： <a href="http://markdownpad.com/download.html" target="_blank" rel="external">MarkdownPad</a></p>
<p>你先试试，用Markdown怎么去些自己的文章，有了例子，还是很容易上手的。  </p>
<h2 id="hexo常用命令"><a href="#hexo常用命令" class="headerlink" title="hexo常用命令"></a>hexo常用命令</h2><p>我们在前面的已经略微的接触了一些hexo的命令，如 &gt; hexo new “my blog” ，&gt; hexo server 等。下面来介绍一下我们经常会用到的hexo命令</p>
<p>1、新建</p>
<pre><code>hexo new &quot;my blog&quot;
</code></pre><p>新建的文件在 hexo/source/_posts/my-blog.md’</p>
<p>2、编译</p>
<pre><code>hexo generate
</code></pre><p>一般部署上去的时候都需要编译一下，编译后，会出现一个 &gt; public 文件夹，将所有的md文件编译成html文件</p>
<p>3、开启本地服务</p>
<pre><code>hexo server
</code></pre><p>这个命令，我之前已经用过了，开启本地hexo服务用的</p>
<p>4、部署</p>
<pre><code>hexo deploy
</code></pre><p>部署到git上的时候，需要用这个命令，下一篇中，我们会使用到这个命令</p>
<p>5、清除 public</p>
<pre><code>hexo clean
</code></pre><p>当 source 文件夹中的部分资源更改过之后，特别是对文件进行了删除或者路径的改变之后，需要执行这个命令，然后重新编译。</p>
<p>6、更新hexo：<br>    <code>npm update -g hexo</code></p>
<p>7、更新主题：  </p>
<pre><code>`cd 到主题文件夹，执行命令：  
git pull`
</code></pre><p>8、更新插件：<br>    <code>npm update</code></p>
<p>以上这些都是经常用到的一些hexo命令。</p>
<h2 id="底部logo栏更改"><a href="#底部logo栏更改" class="headerlink" title="底部logo栏更改"></a>底部logo栏更改</h2><p>找到 \themes\next\layout_partials\下面的footer.swig文件，打开，用<code>&lt;!--</code>和<code>--&gt;</code>把其中的<code>powered-by</code>和<code>theme-info</code>这两端注释掉</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;终于整理好GitHub博客，标记一下！&quot;&gt;&lt;a href=&quot;#终于整理好GitHub博客，标记一下！&quot; class=&quot;headerlink&quot; title=&quot;终于整理好GitHub博客，标记一下！&quot;&gt;&lt;/a&gt;终于整理好GitHub博客，标记一下！&lt;/h1&gt;
    
    </summary>
    
      <category term="NAS" scheme="http://yoursite.com/categories/NAS/"/>
    
    
      <category term="markedown" scheme="http://yoursite.com/tags/markedown/"/>
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hello World!</title>
    <link href="http://yoursite.com/2016/12/31/hello-world/"/>
    <id>http://yoursite.com/2016/12/31/hello-world/</id>
    <published>2016-12-31T15:19:46.000Z</published>
    <updated>2017-01-02T02:55:14.296Z</updated>
    
    <content type="html"><![CDATA[<h2 id="终于建好了自己的微博，颇有感触，也欢迎各位朋友围观！"><a href="#终于建好了自己的微博，颇有感触，也欢迎各位朋友围观！" class="headerlink" title="终于建好了自己的微博，颇有感触，也欢迎各位朋友围观！"></a>终于建好了自己的微博，颇有感触，也欢迎各位朋友围观！</h2><a id="more"></a>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;终于建好了自己的微博，颇有感触，也欢迎各位朋友围观！&quot;&gt;&lt;a href=&quot;#终于建好了自己的微博，颇有感触，也欢迎各位朋友围观！&quot; class=&quot;headerlink&quot; title=&quot;终于建好了自己的微博，颇有感触，也欢迎各位朋友围观！&quot;&gt;&lt;/a&gt;终于建好了自己的微博，颇有感触，也欢迎各位朋友围观！&lt;/h2&gt;
    
    </summary>
    
      <category term="生活" scheme="http://yoursite.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>openmediavault 3 安装 wordpress</title>
    <link href="http://yoursite.com/2016/12/31/omv-install-wordpress/"/>
    <id>http://yoursite.com/2016/12/31/omv-install-wordpress/</id>
    <published>2016-12-31T15:19:46.000Z</published>
    <updated>2017-01-02T02:50:47.424Z</updated>
    
    <content type="html"><![CDATA[<h2 id="本想在omv上装个wordpress玩玩博客，但是网上找的教程都是omv-2-X的教程，而且非常简单，直接安装一个插件就ok了。研究了下，理清楚3-0安装wordpress的思路："><a href="#本想在omv上装个wordpress玩玩博客，但是网上找的教程都是omv-2-X的教程，而且非常简单，直接安装一个插件就ok了。研究了下，理清楚3-0安装wordpress的思路：" class="headerlink" title="本想在omv上装个wordpress玩玩博客，但是网上找的教程都是omv 2.X的教程，而且非常简单，直接安装一个插件就ok了。研究了下，理清楚3.0安装wordpress的思路："></a>本想在omv上装个wordpress玩玩博客，但是网上找的教程都是omv 2.X的教程，而且非常简单，直接安装一个插件就ok了。研究了下，理清楚3.0安装wordpress的思路：</h2><ol>
<li>安装Mysql数据库PHP环境  </li>
<li>安装Nginx Web服务器  </li>
<li>安装wordpress</li>
</ol>
<p>好了，话不多说，上图说明：</p>
<a id="more"></a>
<h3 id="首先新建一个wordpress的共享文件夹"><a href="#首先新建一个wordpress的共享文件夹" class="headerlink" title="首先新建一个wordpress的共享文件夹 "></a>首先新建一个wordpress的共享文件夹 <img src="http://oj28i85cd.bkt.clouddn.com/image/nas/wordpress/wordpressfolder.jpg" alt="newfolder"></h3><h3 id="然后在插件里直接安装-MySQL和Nginx，如下图，由于我已安装，所以按钮部分是灰色的。"><a href="#然后在插件里直接安装-MySQL和Nginx，如下图，由于我已安装，所以按钮部分是灰色的。" class="headerlink" title="然后在插件里直接安装 MySQL和Nginx，如下图，由于我已安装，所以按钮部分是灰色的。"></a>然后在插件里直接安装 MySQL和Nginx，如下图，由于我已安装，所以按钮部分是灰色的。<img src="http://oj28i85cd.bkt.clouddn.com/image/nas/wordpress/install_mysqlnginx.png" alt="install_mysqlnginx"></h3><h3 id="设置Mysql，如下图，设置管理员密码，最好点击apply生效，然后点击"><a href="#设置Mysql，如下图，设置管理员密码，最好点击apply生效，然后点击" class="headerlink" title="设置Mysql，如下图，设置管理员密码，最好点击apply生效，然后点击"></a>设置Mysql，如下图，设置管理员密码，最好点击apply生效，然后点击</h3><blockquote>
<p><strong>show</strong><br><img src="http://oj28i85cd.bkt.clouddn.com/image/nas/wordpress/enablemysql.jpg" alt="enablemysql"></p>
<h3 id="打开页面设置，并用root用户和刚刚设置的管理员密码登陆，然后新建wordpress的数据库，点击确定，Mysql的设置就完成了"><a href="#打开页面设置，并用root用户和刚刚设置的管理员密码登陆，然后新建wordpress的数据库，点击确定，Mysql的设置就完成了" class="headerlink" title="打开页面设置，并用root用户和刚刚设置的管理员密码登陆，然后新建wordpress的数据库，点击确定，Mysql的设置就完成了"></a>打开页面设置，并用root用户和刚刚设置的管理员密码登陆，然后新建wordpress的数据库，点击确定，Mysql的设置就完成了</h3><p><img src="http://oj28i85cd.bkt.clouddn.com/image/nas/wordpress/mysqlset.jpg" alt="mysqlset"></p>
<h3 id="设置Nginx，新建一个pool，如下图设置，其他保持默认即可。"><a href="#设置Nginx，新建一个pool，如下图设置，其他保持默认即可。" class="headerlink" title="设置Nginx，新建一个pool，如下图设置，其他保持默认即可。"></a>设置Nginx，新建一个pool，如下图设置，其他保持默认即可。</h3><p><img src="http://oj28i85cd.bkt.clouddn.com/image/nas/wordpress/nginxsetpool.png" alt="nginxsetpool"></p>
<h3 id="设置Nginx的server，如下图。保存、Apply。"><a href="#设置Nginx的server，如下图。保存、Apply。" class="headerlink" title="设置Nginx的server，如下图。保存、Apply。"></a>设置Nginx的server，如下图。保存、Apply。</h3><p><img src="http://oj28i85cd.bkt.clouddn.com/image/nas/wordpress/nginxservers.png" alt="nginxservers"></p>
<h3 id="最后一步，安装wordpress。-用工具SSH连接OMV，以root用户登陆。切换到最开始建立的wordpress目录用以下命令安装。"><a href="#最后一步，安装wordpress。-用工具SSH连接OMV，以root用户登陆。切换到最开始建立的wordpress目录用以下命令安装。" class="headerlink" title="最后一步，安装wordpress。 用工具SSH连接OMV，以root用户登陆。切换到最开始建立的wordpress目录用以下命令安装。"></a>最后一步，安装wordpress。 用工具SSH连接OMV，以root用户登陆。切换到最开始建立的wordpress目录用以下命令安装。</h3></blockquote>
<p><code>cd /media/你硬盘的uuid/wordpress/
wget https://wordpress.org/latest.tar.gz
tar xvzf latest.tar.gz --strip-components=1
rm latest.tar.gz</code></p>
<h3 id="现在登陆这个网址吧-http-omv的地址-8090"><a href="#现在登陆这个网址吧-http-omv的地址-8090" class="headerlink" title="现在登陆这个网址吧: http://omv的地址:8090/"></a>现在登陆这个网址吧: <a href="http://omv的地址:8090/" target="_blank" rel="external">http://omv的地址:8090/</a></h3><h3 id="大功告成！"><a href="#大功告成！" class="headerlink" title="大功告成！"></a>大功告成！</h3>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;本想在omv上装个wordpress玩玩博客，但是网上找的教程都是omv-2-X的教程，而且非常简单，直接安装一个插件就ok了。研究了下，理清楚3-0安装wordpress的思路：&quot;&gt;&lt;a href=&quot;#本想在omv上装个wordpress玩玩博客，但是网上找的教程都是omv-2-X的教程，而且非常简单，直接安装一个插件就ok了。研究了下，理清楚3-0安装wordpress的思路：&quot; class=&quot;headerlink&quot; title=&quot;本想在omv上装个wordpress玩玩博客，但是网上找的教程都是omv 2.X的教程，而且非常简单，直接安装一个插件就ok了。研究了下，理清楚3.0安装wordpress的思路：&quot;&gt;&lt;/a&gt;本想在omv上装个wordpress玩玩博客，但是网上找的教程都是omv 2.X的教程，而且非常简单，直接安装一个插件就ok了。研究了下，理清楚3.0安装wordpress的思路：&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;安装Mysql数据库PHP环境  &lt;/li&gt;
&lt;li&gt;安装Nginx Web服务器  &lt;/li&gt;
&lt;li&gt;安装wordpress&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;好了，话不多说，上图说明：&lt;/p&gt;
    
    </summary>
    
      <category term="NAS" scheme="http://yoursite.com/categories/NAS/"/>
    
    
      <category term="openmediavault 3" scheme="http://yoursite.com/tags/openmediavault-3/"/>
    
      <category term="wordpress" scheme="http://yoursite.com/tags/wordpress/"/>
    
  </entry>
  
</feed>

<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[Hello World!]]></title>
      <url>%2F2017%2F12%2F31%2Fhello-world%2F</url>
      <content type="text"><![CDATA[终于建好了自己的博客，颇有感触，也欢迎各位朋友围观！ 十岁不愁、二十不悔、”三十而立、四十不惑、五十知天命、六十耳顺、七十古稀、八十耄耋（mào dié）–而我已是到了而立之年。以前总是着迷各种网络新鲜事物，喜欢折腾各种电子玩物，从其他玩家那里学习各种知识，慢慢走出脱离小白之路。而今感觉需要将自己所学分享出来了，而这也是我主要建立这博客的主要原因。 首先，我很庆幸自己是一名中国人，出生在中国，因为中文文化太迷人了，比如小说。以下引自知乎网友卢诗翰： 我来告诉你一个事实国外的小说，全部，所有，没有一部拥有中文小说这样庞大的世界观之前和国外朋友聊起，我说我们的孙悟空，这个形象源于1500年前唐朝的真实故事在1000年前南宋时期就在普罗大众中口口相传，代表了反抗无上权威的抗争者恩，里面出现的那个哪吒三太子，故事根要追溯到3000年前的周朝伐商之战，恩，也是历史书上真实的故事冰与火和魔戒，世界观较大，描述也非常细致，但有一个致命的弱点，二者均是自创世界观最多基于欧洲古典文化中的一些故事和古典骑士小说而中文网文，尤其仙侠类，得天独厚，拥有追溯上古的历史而且重点是有一代一代的中文作者不断加持这使得中文网文在装逼界简直堪称恐怖如斯恩，今天我们主角要去的全真派，源自800年前的真实故事全真掌门，曾经给蒙古大汗上过课，恩，就是后来打到你们多瑙河的那个成吉思汗对方表示好好好，逼全让你们装完了神话故事和历史无缝结合，不但大大加强了小说的代入感，还使得中文作者在世界观架构上吊打国外作者。魔戒和地下城系统，其实你自己去翻世界观最初架构，基本都是语焉不详，估计托老也没有想好怎么编中文这边，西游记搜神记山海经封神演义多套架构随你选择，其架构完整性经过千百年来无数作者的补充，非常完善。就一个简单的，世界诞生为何，人死后灵魂去哪国内有好多种说法，但是随便哪套拿出来，整体的逻辑自洽度是非常高的：牛头马面功能，奈何桥系统，孟婆汤补丁，六道轮回算法机制，功德投胎排名机制，应对BUG的谛听系统，热备用的地藏王系统这些你习以为常的东西在国外都是没有的，托老这样的集大成者也只能一笔带过而且，最恐怖的是拥有逻辑自洽能力苍天已死，黄天当立——当年张角就是靠着这个掀翻了400年的大汉朝，才有后面三国鼎立的局面你说这个太平广记是不是真货！好好说话，你先把历史书放下世界观方面，中文作者天生有一点优势此外，中文小说，似乎确实在世界观上面比国外的要奔放一些之前回答过一个问题在看一些日本动漫时总有种「格局很小，只有一小撮人斗智斗勇」的感觉，是否跟作者或日本的某些文化有关？ - 卢诗翰的回答 - 知乎日本的小说，轻小说有一个很典型的特点就是 — — 一骑讨打到最后决战你发现是两方王者在对打，要命的是这两个人居然还是一个学校的同班同学格局大致也是 保卫这个城市，守护那个地区西方小说有一个类似的问题，在哈利波特里面非常突出— — 我需要这个老魔杖，得到他的人能无敌天下换成中文作者不但要得到它，肯定还要自己造出更厉害的东西，命名成什么龙之魔杖什么的而且中文作者的视角往往是：一个魔杖顶蛋用，再厉害的武器也没用真正有用的是千军万马，魔杖所指之处，法师团们蜂拥而上之处阶级斗争理论，中文作者领先国外作者一个光年此外中文的爽文打到后面，文艺一点的就是我要那天，再难遮我眼我要那地，再难埋我心粗放一点，那就是横扫一切牛鬼蛇神无需守护传说，我将超越传说这种非常积极超越前人，尤其是无视权威，打倒一切诸神的能动性，是中文网文独有的 如此丰富的中文文化，想必传播出去肯定把歪果仁迷得神魂颠倒，果然新闻就出来。 而我觉得之所以能这么火，一个原因在于中国文化，上文已提及；另外一个原因是由于大众的分享。互联网的出现使新闻资讯、媒体、商品、知识等一切信息能迅速传播，而我也希望从我自己获取的信息中提炼精华，分享给他人，让他人少走弯路，使生活更美好！]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[个人备注]]></title>
      <url>%2F2017%2F01%2F02%2Fpersonal-note%2F</url>
      <content type="text"><![CDATA[个人标记 配置 安装 Hexo 插件npm install hexo-generator-index --save npm install hexo-generator-archive --save npm install hexo-generator-category --save npm install hexo-generator-tag --save npm install hexo-server --save npm install hexo-deployer-git --save npm install hexo-deployer-heroku --save npm install hexo-deployer-rsync --save npm install hexo-deployer-openshift --save npm install hexo-renderer-marked@0.2 --save npm install hexo-renderer-stylus@0.2 --save npm install hexo-generator-feed@1 --save npm install hexo-generator-sitemap@1 --save npm install hexo-generator-sitemap --save npm install hexo-generator-baidu-sitemap --save npm install hexo-generator-searchdb --save Markdown语法1、分段： 两个回车 2、换行 两个空格 + 回车 3、标题 # ~ ###### 井号的个数表示几级标题，即Markdown可以表示一级标题到六级标题 4、引用 &gt; 5、列表 * ， + ， - ， 1. ，选其中之一，注意后面有个空格 6、代码区块 四个空格 开头 7、链接 [文字](链接地址) 8、图片 ![图片说明](图片地址) ，图片地址可以是本地路劲，也可以是网络地址 9、强调 文字 ， 文字 ， 文字 ， 文字 10、代码 `， 下面来看看例文，你就马上明白，怎么来使用这些符号来写好一篇自己的博文了。 例文 在线编辑器例文： 传送门 Windows编辑器： MarkdownPad 你先试试，用Markdown怎么去些自己的文章，有了例子，还是很容易上手的。 hexo常用命令我们在前面的已经略微的接触了一些hexo的命令，如 &gt; hexo new “my blog” ，&gt; hexo server 等。下面来介绍一下我们经常会用到的hexo命令 1、新建 hexo new &quot;my blog&quot; 新建的文件在 hexo/source/_posts/my-blog.md’ 2、编译 hexo generate 一般部署上去的时候都需要编译一下，编译后，会出现一个 &gt; public 文件夹，将所有的md文件编译成html文件 3、开启本地服务 hexo server 这个命令，我之前已经用过了，开启本地hexo服务用的 4、部署 hexo deploy 部署到git上的时候，需要用这个命令，下一篇中，我们会使用到这个命令 5、清除 public hexo clean 当 source 文件夹中的部分资源更改过之后，特别是对文件进行了删除或者路径的改变之后，需要执行这个命令，然后重新编译。 6、更新hexo： npm update -g hexo 7、更新主题： `cd 到主题文件夹，执行命令： git pull` 8、更新插件： npm update 以上这些都是经常用到的一些hexo命令。 底部logo栏更改找到 \themes\next\layout_partials\下面的footer.swig文件，打开，用&lt;!--和--&gt;把其中的powered-by和theme-info这两端注释掉 添加版权对于 hexo next 主题而言先找到（\themes\next\layout\post.swig） 在区域内添加如下代码： &lt;div class=&quot;page-footer&quot;&gt; {% if not is_index %} 本文标题:{{ page.title }} 文章作者:{{ theme.author }} 发布时间:{{ page.date.format("YYYY年M月D日 - HH时MM分") }} 最后更新:{{ page.updated.format("YYYY年M月D日 - HH时MM分") }} 本文字数:本文一共有{{ wordcount(page.content) }}字 原始链接:{{ page.permalink }} 许可协议: Attribution-NonCommercial 4.0 转载请保留以上信息。 {% endif %} {% if not is_index and (post.prev or post.next) %} {% if post.prev %} {{post.prev.title}} {% endif %} &lt;/div&gt; &lt;div class=&quot;post-nav-next post-nav-item&quot;&gt; {% if post.next %} {{post.next.title}} {% endif %} &lt;/div&gt; &lt;/div&gt; {% endif %} &lt;/div&gt;]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[openmediavault 3 安装 wordpress]]></title>
      <url>%2F2016%2F12%2F31%2Fomv-install-wordpress%2F</url>
      <content type="text"><![CDATA[本想在omv上装个wordpress玩玩博客，但是网上找的教程都是omv 2.X的教程，而且非常简单，直接安装一个插件就ok了。研究了下，理清楚3.0安装wordpress的思路： 安装Mysql数据库PHP环境 安装Nginx Web服务器 安装wordpress 好了，话不多说，上图说明： 首先新建一个wordpress的共享文件夹 然后在插件里直接安装 MySQL和Nginx，如下图，由于我已安装，所以按钮部分是灰色的。设置Mysql，如下图，设置管理员密码，最好点击apply生效，然后点击 show 打开页面设置，并用root用户和刚刚设置的管理员密码登陆，然后新建wordpress的数据库，点击确定，Mysql的设置就完成了 设置Nginx，新建一个pool，如下图设置，其他保持默认即可。 设置Nginx的server，如下图。保存、Apply。 最后一步，安装wordpress。 用工具SSH连接OMV，以root用户登陆。切换到最开始建立的wordpress目录用以下命令安装。 cd /media/你硬盘的uuid/wordpress/ wget https://wordpress.org/latest.tar.gz tar xvzf latest.tar.gz --strip-components=1 rm latest.tar.gz 现在登陆这个网址吧: http://omv的地址:8090/大功告成！]]></content>
    </entry>

    
  
  
</search>
